[project]
name = 'hashsmith'
version = '0.1.1'
description = 'A modern, compositional password pattern engine and hashcat orchestrator'
authors = [
    {name = 'Baksi Li', email = 'myself@baksili.codes'},
]
dependencies = [
    'pycryptodome>=3.23.0',
    'pysodium>=0.7.18'
]
requires-python = '>=3.11'
readme = 'README.md'
license = {text = 'MIT'}
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Security',
    'Topic :: Security :: Cryptography',
    'Topic :: Utilities',
]
keywords = ['password', 'hashcat', 'security', 'patterns', 'cracking', 'wordlist']

[project.urls]
Homepage = 'https://github.com/BaksiLi/hashsmith'
Issues = 'https://github.com/BaksiLi/hashsmith/issues'
Documentation = 'https://github.com/BaksiLi/hashsmith#readme'

[build-system]
requires = ['pdm-backend']
build-backend = 'pdm.backend'

[tool.pdm]
distribution = false

[tool.pdm.build]
includes = ['src']
package-dir = 'src'

[tool.pdm.dev-dependencies]
dev = [
    'pytest>=8.4.1',
    'pytest-cov>=6.1.1',
]
lint = [
    'ruff>=0.5.0',
    'black>=23.11.0',
    'mypy>=1.7.0',
]

[tool.pdm.scripts]
# Test and development scripts
test = {cmd = 'pytest'}
test-cov = {cmd = 'pytest --cov=src/hashsmith tests/'}
lint = {cmd = 'ruff check src/ tests/'}
format = {cmd = 'black src/ tests/'}
typecheck = {cmd = 'mypy src/'}

[tool.pytest.ini_options]
testpaths = ['tests']
python_files = 'test_*.py'
addopts = '-v'

[tool.black]
line-length = 88
target-version = ['py311', 'py312']

[tool.ruff]
line-length = 88
target-version = 'py311'
select = ['E', 'F', 'I', 'B', 'C4', 'UP']

[tool.mypy]
python_version = '3.11'
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_optional = true
